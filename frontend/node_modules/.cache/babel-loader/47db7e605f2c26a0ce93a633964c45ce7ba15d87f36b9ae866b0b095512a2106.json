{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      base64Image: '',\n      // Base64 string of the selected image\n      imageUrl: '' // URL of the uploaded image (optional, for preview)\n    };\n  },\n  methods: {\n    // Handle file selection\n    onFileChange(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.selectedFile = file;\n        this.convertToBase64(file);\n      }\n    },\n    // Convert the image file to base64 string\n    convertToBase64(file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        this.base64Image = reader.result.split(',')[1]; // Remove the \"data:image/png;base64,\" prefix\n      };\n      reader.readAsDataURL(file);\n    },\n    // Call the backend API to upload the image\n    async uploadImage() {\n      if (this.base64Image) {\n        try {\n          const response = await axios.post('http://localhost:5128/api/ImageUpload/upload', {\n            Base64Image: this.base64Image\n          });\n\n          // Handle the successful upload response\n          this.imageUrl = response.data.FilePath;\n        } catch (error) {\n          console.error('Error uploading image:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","selectedFile","base64Image","imageUrl","methods","onFileChange","event","file","target","files","convertToBase64","reader","FileReader","onloadend","result","split","readAsDataURL","uploadImage","response","post","Base64Image","FilePath","error","console"],"sources":["C:\\Users\\WengYinHo\\Desktop\\DotnetImageController\\my-vue-project\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Upload Image</h2>\n    <input type=\"file\" @change=\"onFileChange\" accept=\"image/*\" />\n    <button @click=\"uploadImage\" :disabled=\"!base64Image\">Upload</button>\n\n    <p v-if=\"imageUrl\">Image uploaded successfully! <a :href=\"imageUrl\" target=\"_blank\">View Image</a></p>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      selectedFile: null,\n      base64Image: '',  // Base64 string of the selected image\n      imageUrl: '', // URL of the uploaded image (optional, for preview)\n    };\n  },\n  methods: {\n    // Handle file selection\n    onFileChange(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.selectedFile = file;\n        this.convertToBase64(file);\n      }\n    },\n\n    // Convert the image file to base64 string\n    convertToBase64(file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        this.base64Image = reader.result.split(',')[1]; // Remove the \"data:image/png;base64,\" prefix\n      };\n      reader.readAsDataURL(file);\n    },\n\n    // Call the backend API to upload the image\n    async uploadImage() {\n      if (this.base64Image) {\n        try {\n          const response = await axios.post('http://localhost:5128/api/ImageUpload/upload', {\n            Base64Image: this.base64Image,\n          });\n\n          // Handle the successful upload response\n          this.imageUrl = response.data.FilePath;\n        } catch (error) {\n          console.error('Error uploading image:', error);\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Add some basic styling */\n</style>\n"],"mappings":"AAWA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAI;MAClBC,WAAW,EAAE,EAAE;MAAG;MAClBC,QAAQ,EAAE,EAAE,CAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,YAAYA,CAACC,KAAK,EAAE;MAClB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAIF,IAAI,EAAE;QACR,IAAI,CAACN,YAAW,GAAIM,IAAI;QACxB,IAAI,CAACG,eAAe,CAACH,IAAI,CAAC;MAC5B;IACF,CAAC;IAED;IACAG,eAAeA,CAACH,IAAI,EAAE;MACpB,MAAMI,MAAK,GAAI,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAQ,GAAI,MAAM;QACvB,IAAI,CAACX,WAAU,GAAIS,MAAM,CAACG,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;MAClD,CAAC;MACDJ,MAAM,CAACK,aAAa,CAACT,IAAI,CAAC;IAC5B,CAAC;IAED;IACA,MAAMU,WAAWA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACf,WAAW,EAAE;QACpB,IAAI;UACF,MAAMgB,QAAO,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,8CAA8C,EAAE;YAChFC,WAAW,EAAE,IAAI,CAAClB;UACpB,CAAC,CAAC;;UAEF;UACA,IAAI,CAACC,QAAO,GAAIe,QAAQ,CAAClB,IAAI,CAACqB,QAAQ;QACxC,EAAE,OAAOC,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAChD;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}